import _ from 'underscore';

const Match_ = ((mtr) => {
  // ------------------------------------------------------------------------
  // Constants
  // ------------------------------------------------------------------------

  const VERSION = BasMTR.Utils.VERSION;

  // ------------------------------------------------------------------------
  // Vars
  // ------------------------------------------------------------------------


  // ------------------------------------------------------------------------
  // Class Definition
  // ------------------------------------------------------------------------

  class Match_ {
    /* constructor() {

    } */

    // Getters
    // ------------------------------------------------------------------------

    static get VERSION() {
      return VERSION;
    }

    // Public
    // ------------------------------------------------------------------------


    // Static
    // ------------------------------------------------------------------------

    // Is positive integer
    static isPositiveInteger(number) {
      const _positive = Match.Where(function (x) {
        check(x, Match.Integer);
        return x >= 0;
      });
      check(number, _positive);
    }

    // Get Default
    static getDefault(number, default_val) {
      if (_.isNumber(number)) {
        return number;
      }

      return default_val !== undefined ? default_val : 0;
    }

    // Static Private
    // ------------------------------------------------------------------------
  }

  // ------------------------------------------------------------------------
  // Init
  // ------------------------------------------------------------------------


  // ------------------------------------------------------------------------
  // Meteor
  // ------------------------------------------------------------------------

  // Meteor startup
  mtr.startup(function () {
    // ...
  });

  return Match_;
})(Meteor);

BasMTR.Match = Match_;
export default Match_;
